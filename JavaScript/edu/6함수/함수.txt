함수란 ?
- 어떤 목적을 가지고 작성한 코드를 모아놓은 블록문
- 코드를 함수로 만들면 함수를 호출해 함수 내부에 모아둔 여러줄의 코드를
한번에 실행할 수 있다. 그래서 여러곳에서 재사용하기가 매우 편함

구구단 3단 출력하는 코드
gugudan_consol.js

- js에서 함수는 함수 선언문, 함수 표현식, 화살표 함수를 사용해서 정의합니다.
1. 함수 선언문으로 함수 정의하기
    방법 : function 키워드로 함수 정의, function 키워드 다음에 함수를 식별할 수 있도록 함수명을 붙힘
    함수를 정의하고 나면 식별자(함수명)과 괄호로 함수 호출해서 실행함

2. 함수 표현식으로 함수 정의
    방법 : 함수도 변수에 할당해서 저장할 수 있는데, 이를 이용한 함수정의방법을 함수 표현식이라고 함
           함수표현식은 변수에 할당하는 함수에 함수명이 있으면 네이밍 함수, 없으면 익명 함수라고 함 
    문법 : 
         const 변수명 = function(){} - 익명 함수
         const 변수명 = function 함수명(){}; - 네이밍 함수

3. 화살표 함수
방법 : 화살표 함수는 ES6에서 추가된 함수정의 방법, 화살표를 사용해 함수를 정의
    문법 :
        const 변수명 = () => {
            함수 정의
        };

=====================================================================================================
매개변수와 인수
    매개변수를 포함해 함수를 정의하는 기본 문법
    1. 함수 선언문 이용
        function 함수명(parameter){}
    2. 함수 표현식 이용
        const var = function(parameter){}
    3. 화살표 함수
        const var = (parameter) => {}
매개변수의 특징
    명명규칙 : 일반적인 변수의 명명규칙에 따름
데이터 전달
    함수의 매개변수에 데이터가 전달되는 과정은 함수를 정의할때 함께 정의한 매개변수는 함수 호출 시 전달되는
    데이터와 1:1 대응되어 데이터가 할당된다. 따라서 첫번째 인수는 첫번째 매개변수에 할당되고, 두번째 인수는 두번째 매개변수에 할당

매개변수는 호출시 전달되는 데이터가 기본으로 할당되지만 호출할때 데이터를 전달하지 않는다고해서 오류가 발생하지 않음
변수를 선언하고 값을 할당하지 않으면 undefined값으로 초기화 되는 것처럼 매개변수도 함수 호출 시 데이터를 전달하지 않으면 undefined값이 할당되어 오류 발생하지 않음

기본값 할당
    앞에서 매개변수를 정의하고 데이터를 전달하지 않으면 매개변수에는 undefined값이 자동으로 할당된다고 했는데 ES6에서 기본값을 지정하는 방식이 추가
    이제 매개변수에 직접 데이터를 할당하는 방식으로 단순하게 기본값을 지정할 수 있다
    function sum(a=10, b=10){
        console.log(a,b);
    }
----------------------------------------------------------------------------------------------------------------------------------------------------------
return문
- 함수를 호출할 떄 데이터를 전달하려면 매개변수를 정의해야 하듯이 함수 외부로 데이터를 반환할떄는 return문을 사용해야 합니다.
- return으로 반환하지 않으면 함수 실행을 종료한다는 뜻임 return ;

